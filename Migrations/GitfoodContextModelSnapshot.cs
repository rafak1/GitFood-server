// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.DataModel;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(GitfoodContext))]
    partial class GitfoodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("ProductsCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("category_id");

                    b.HasKey("ProductId", "CategoryId")
                        .HasName("products_categories_pkey");

                    b.HasIndex("CategoryId");

                    b.ToTable("products_categories", (string)null);
                });

            modelBuilder.Entity("Server.DataModel.Barcode", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("character varying")
                        .HasColumnName("key");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.HasKey("Key")
                        .HasName("Barcode_pkey");

                    b.HasIndex("ProductId");

                    b.ToTable("barcodes", (string)null);
                });

            modelBuilder.Entity("Server.DataModel.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("categories_pkey");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Server.DataModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("character varying")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("Products_pkey");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("ProductsCategory", b =>
                {
                    b.HasOne("Server.DataModel.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("products_categories_category_id_fkey");

                    b.HasOne("Server.DataModel.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("products_categories_product_id_fkey");
                });

            modelBuilder.Entity("Server.DataModel.Barcode", b =>
                {
                    b.HasOne("Server.DataModel.Product", "Product")
                        .WithMany("Barcodes")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("Barcode_ProductId_fkey");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Server.DataModel.Product", b =>
                {
                    b.Navigation("Barcodes");
                });
#pragma warning restore 612, 618
        }
    }
}
